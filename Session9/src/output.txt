Session 9
demoConversions()
{
 === begin block
=== UniquePointer xHandler(new X)
C::C()
B::B(int 50)
A::A()
UniquePointer<Resource>::UniquePointer(Resource*) [with Resource = A]
C::C()
B::B(int 50)
A::A()
UniquePointer<Resource>::UniquePointer(Resource*) [with Resource = A]
B::B()
UniquePointer<Resource>::UniquePointer(Resource*) [with Resource = B]
C::C()
UniquePointer<Resource>::UniquePointer(Resource*) [with Resource = C]
=== UniquePointer c2Handler(std::move(a1Handler))
UniquePointer<Resource>::UniquePointer(UniquePointer<OtherType>&&) 
[with OtherType = A; Resource = C]
=== c1Handler->operation();
Resource* UniquePointer<Resource>::operator->() const [with Resource = C]
virtual void C::operation()
=== c2Handler->operation();
Resource* UniquePointer<Resource>::operator->() const [with Resource = C]
virtual void A::operation()
=== c1Handler = std::move(aHandler);
UniquePointer<Resource>& UniquePointer<Resource>::operator=(UniquePointer<OtherType>&&) 
[with OtherType = A; Resource = C]
virtual C::~C()
=== c1Handler->operation();
Resource* UniquePointer<Resource>::operator->() const [with Resource = C]
virtual void A::operation()
}
 === end block
UniquePointer<Resource>::~UniquePointer() [with Resource = C]
virtual A::~A()
B::~B()
virtual C::~C()
UniquePointer<Resource>::~UniquePointer() [with Resource = C]
virtual A::~A()
B::~B()
virtual C::~C()
UniquePointer<Resource>::~UniquePointer() [with Resource = B]
B::~B()
UniquePointer<Resource>::~UniquePointer() [with Resource = A]
UniquePointer<Resource>::~UniquePointer() [with Resource = A]

